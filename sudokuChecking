#Sudoku is a number-placement puzzle. The objective is to fill a 9 × 9 grid with numbers in such a way that each column, 
#each row, and each of the nine 3 × 3 sub-grids that compose the grid all contain all of the numbers from 1 to 9 one time.
#Implement an algorithm that will check whether the given grid of numbers represents a valid Sudoku puzzle according to the layout 
#rules described above. Note that the puzzle represented by grid does not have to be solvable.
def sudokuChecking(grid):
    grid=[[i.replace(".","0") for i in row] for row in grid]
    n=len(grid)
    s=45
    
    grid =[[int(i) for i in row] for row in grid]
    a=0
    b=0
    c=0
    for x in range(1,10):
        if sum(grid[x-1]) != sum(set(grid[x-1])) or any(i > 9 for i in grid[x-1] ):
            a=1 

    grid_tran= [[row[i] for row in grid] for i in range(0,9)]
    for x in range(1,10):
        if sum(grid_tran[x-1]) != sum(set(grid_tran[x-1])) or any(i > 9 for i in grid_tran[x-1] ):
            b=1 
    
    for i in range(0,n-3+1,3): 
        for j in range(0,n-3+1,3): 
            grid_sum=[]
            for k in range(i, i + 3): 
                for h in range(j, j + 3): 
                    val = grid[k][h]
                    grid_sum.append(val)
            if sum(grid_sum) != sum(set(grid_sum)) or any(i > 9 for i in grid_sum ):
                c=1
            
    if a==1 or b==1 or c==1:
        return False
    else:
        return True
